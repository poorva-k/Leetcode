/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        int val=0;
        if (l1==null) 
            return l2;
        else if( l2 ==null)
            return l1;
        if(l1.val <= l2.val){
            val = l1.val;
            l1 = l1.next;
        }
        else{
            val= l2.val;
            l2=l2.next;
        }   
        ListNode result = new ListNode(val);
        ListNode last = result ;
        while(l2!=null && l1!=null){
            if(l1.val <= l2.val){
            ListNode nw = new ListNode(l1.val);
            last.next = nw;
            last = nw;
            l1 = l1.next;
            }
            else{
                ListNode nw = new ListNode(l2.val);
                last.next = nw;
                last = nw;
                l2=l2.next;
            } 
            
            
        }
        if(l1!=null)
            last.next = l1;
        if(l2!=null)
            last.next = l2;
        return result;
    }
}